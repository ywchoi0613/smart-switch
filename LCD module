#include <DHT.h>  //include DHT sensor library
#include <DHT_U.h>
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

#define DHTPIN 3
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,20,4);  // set the LCD address to 0x27 for a 16 chars and 2 line display

RF24 radio(7, 8); // CE, CSN 핀 번호
const byte address[6] = "00001"; // 수신부와 동일한 주소 사용

int light = A1;

int Dust=0;
String Dustvalue;

int Vo=A0;
int V_LED=2;

float Vo_value = 0;
float Voltage=0;

void setup() {
  // put your setup code here, to run once
  Serial.begin(9600);
  dht.begin();
  radio.begin();
  radio.openWritingPipe(address);
  pinMode(V_LED, OUTPUT);
  pinMode(Vo,INPUT);

}





void loop() {
  // put your main code here, to run repeatedly:
  //온도와 습도 값을 측정하고 변수에 저장하기
  int humi, temp;
  temp = dht.readTemperature();
  humi = dht.readHumidity();
  int lightValue = analogRead(light);  //밝을수록 낮음

  //센서가 측정하지 못 할 경우 측정 종료
  if(isnan(humi) || isnan(temp)){
    Serial.println("Failed to read from DHT sensor!!");
    return;
  }
  digitalWrite(V_LED,LOW);
  delayMicroseconds(280);
  Vo_value = analogRead(Vo);
  delayMicroseconds(40);
  digitalWrite(V_LED,HIGH);
  delayMicroseconds(9680);

  Voltage = Vo_value*5.0/1024.0;

  if(Voltage < 0.8){
    Dust = 10*(5*(Voltage - 0.1));
  }
  else if (Voltage < 1) {
    Dust = 10 + 15 *((Voltage - 0.8)*10);
  }
  else if(Voltage > 1){
    Dust = 40 + 16*((Voltage-1)*10);
  }

  if(Dust <=30) {
    Dustvalue = "GOOD";
  }
  else if(30 < Dust <=80) {
    Dustvalue = "NORMAL";
  }
  else if(80 <= Dust){
    Dustvalue = "BAD";
  }


  //측정된 온도와 습도 출력하기
  Serial.print("온도 : ");
  Serial.print(temp);
  Serial.println("℃");
  Serial.print("습도 : ");
  Serial.print(humi);
  Serial.println("%");
  Serial.print("light= ");
  Serial.println(lightValue);
  Serial.print("Voltage:");
  Serial.println(Voltage);
  Serial.print("Dust:");
  Serial.println(Dustvalue);
  Serial.println("");


  //delay(1500);

  lcd.init();                      // initialize the lcd 
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("Temp");
  lcd.setCursor(6,0);
  lcd.print("RH");
  lcd.setCursor(10,0);
  lcd.print("Air");
  lcd.setCursor(0,1);
  lcd.print(temp);
  lcd.setCursor(6,1);
  lcd.print(humi);
  lcd.setCursor(10,1);
  lcd.print(Dustvalue);

  
  radio.write(&lightValue, sizeof(lightValue));
  Serial.print("Light Intensity: ");
  Serial.println(lightValue);
  
  delay(1000); // 1초마다 데이터 전송
}
